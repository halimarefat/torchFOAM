/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.0                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;
    instance        "system";
    class           dictionary;
    object          initializeABLDict;
}


/*
                     Copywrite [C] 2008--- (Dr Jahrul Alam, Memorial Unviersity)
       	       	     this software is being written for
		     Dr Alam's research group.
		     This software is freely distributed without any warranty
		     and can be reused, redistributed, and/or modified
		     as long as the above copywrite information is preserved.
*/


// Assume a friction Reynolds number for initial condition
Retau 10000;

// For this version only sreamwise=0 and spanwise=1 works
// Streamwise component
streamwise 0;

// Spanwise component 
spanwise 1;

// U(z) is define by setMean=true, Ubar is read from transportProperties
// u = (z < H ? U(z) : Ubar)
H 600;

// horizontal scale, e.g. sin(2*pi*k*x/L), unused for now
L 600.0;

// Set U(z) = u*/k*log(z/z0)
setMean false;

// Set analytical solution of Ekman layer as the mean flow
setMeanEkman false;

EkmanDepth 160;

// Rougness height
z0  0.5;

// Ref height, where U is prescribed
HRef  500;

// Ref velocity at Ref height
URef  6;

// Von Karman constant
vonK 0.41;

// Friction velocity is calculated by u* = URef*vonK / log(HRef/z0)

// [u',v'] = [cos(beta*y)*exp(-sigma*z^2),sin(alpha*x)*exp(-sigma*z^2)]
setPerturb false;

// mean flow is 2D Taylor Green vortex [sin(alpha*x)*cos(beta*y),-cos(alpha*x)*sin(beta*y)]
TaylorGreen2D false;

// Turn off/on random turbulent intensity ~20%
RandomNoise true;

// set initial temperature
setTemp false;

//spanwise frequence for u', v'
beta 0.02; // 16*pi/3000
//beta 0.1047;
//beta 0.01407;
//beta 0.041888;
//beta  0.0021;

//streamwise frequence for u', v'
alpha 0.016755169; // 16*pi/3000
//alpha 0.1047;
//alpha 0.01407; 
//alpha 0.041888;

//decay in the vertical direction: exp(-sigma*z^2)
//sigma 0.0125;
//sigma 0.025;
sigma 0.002;
//sigma 0.000005;




// ************************************************************************* //
